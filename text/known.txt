
     let's talk about the law of Demeter is a design rule that tries to help you reduce coupling in
 your systems remember object orientation 101 bad cohesion good how much certain pieces
 belong together and they make sense inter twinkling intermingling two
 pieces each other making them difficult separate from so again the
 principle minimize in what does law
 say says it's okay call dot B but not to
 C do we mean with all these random letters right assume you're method access something that's scope ie also public member on so
 being context take then it or
 more generally go far not
 further can't beyond see reason for this coupling
 because are doing fact has whole chain instead just or course getting super confusing
 an actual example consider silly have
 ocean have class fish ocean
 put some collection method
 returns boolean true false dependent whether hungry that
 now whoever program think hierarchy bunch instances fish
 meant called determines particular requirement want even
 program's perspective gather out fishes actually concretely we
 filter
 would without thinking probably ok instance right
 plural as get maybe use filter function run give as
 essence us only what's problem breaking could be dinner I'm actually
 sure wording who cares generalize back is
 essentially we're when performing calling but
 slight nuances collections filters etc of
 don't should create kind facade adapter delegates B
 thing correspondingly why C
 case scenario idea words grabbing explore acting just
 like when
 one itself responsible determining which returning those and
 simply were ramp up another will object
 even worse two chains than between objects identify such realize way rid by creating usually exposing if it
 very information hiding details outside necessarily caring I'll stop rambling eh it's
 questions angry comments please shoot them
 I love discuss subscribe there's this
 coming ways programming
 confusing programmingyou've heard expression code read well-written prose book easy understand literature might seem completely unreasonable means can achieve refactoring Martin Fowler you'll come across different patterns lot intended yes increase flexibility human readable quick simple employee calculate salary complex nasty logic going whenever touches things here there eventually number represents monthly particularly obvious piece start really dig into highly recommend link description gives atomic steps carefully refactor significantly system we've been position where fantastic begin find ourselves broken weeks techniques used avoid ending try pull order we'll may happened was first got employees base sort baseline after added bonus Commission's sales people salespeople working commission three need ask yourself situations pushing elevate promote at least their own methods potentially private incorporating name our pros let me show pulled interest blocks commented exercise depending names suddenly starts INT takes no argument return provision text before programmer didn't write months revisiting person looking able roughly having internals whereas had through procedural massive gap supposed aware scratching surface push extent exponent encapsulate detail somewhere downwards classes down supposedly won't lines perform brutally fueled trust same place extract colleague fancies long him her video debate today thank miss next laters difference proxy pattern oftentimes explained terms others blur day discussion someone loosely conversation referring concept traditionally haven't separating concepts discussions piqued my did search found article I've linked below figured explanation differences any regardless using word look keep mentioning benefit gain correct term know detailed cases understands specifically talking solving last point familiar quickly mentioned core both neurons lie changes implementation change interface nuance facades grow large indicate wrong EDD well few moments recap changing replace original vice versa list pop needs always respond pump though usual element item array whatever popped off stack doesn't behavior wants stay inside part calls pushes managed exchange lists normal interchangeably application changed else moving adapters best analogy power travel new country electricity plug connector wanna many places responded set regarding chose seems implies disregarding still adapted message send appropriate receives messages syntax elsewhere applications sent while cannot exchanged interfaces away input however you've written API alright lastly adaptors argues over time distinction lies issues superbly designed considered ready according communicate developers unadvised adapting sway contrast insulates legacy deprecated honestly wouldn't harsh real world allow myself adaptor slightly depends strict strictly interpret argued perhaps scenarios weigh cost benefits I'd trivial yeah fair enough end long-lived value proxying clear towards hanging parking watching outrageous hit ideas future videos episode cold forward better "I briefly tell asking checking property running somehow decision its internal state check gotten basis classic ID switch statement precise animal pool determine feed question telling behalf specific view bool isn't eat animals feeding Anam surprised often spontaneously introspecting decisions tail action preconditions consequently performed determined taken solely within corresponds principal wood assumes sits handle happen wanted non related situation move since path execution eats anything silently quotation marks' failure Fame adheres specification introspect inspect themselves previously stated necessary resides condition pass taking win almost user IU couples lower interesting principles examples hope helpful appreciate button time" premature abstraction arguing bit careful goes along abstracting solve general short story involved years ago thought afterwards following conclusion tiny portion tasked develop grid displayed images fairly crux arbitrary obviously requirements distort couldn't stretch scale proportionally 200% wide 100% height solutions they're complicated went split discussing father easiest approach image canvas half halves procedure until equal comparison display work took longer fixed extra causes page scroll decided upon viewed landscaper portrait mention problems 30 columns rows nicely resolution screen viewing rather dimensions window dwell neither solution imposed constraints prematurely times meet they'll trying yangmi ain't gonna extremely evident developer spent feature programmers facing intrinsically explain old tough solved choosing landscape overflowing unsaved uneven marks implement abstract algorithm mathematical tricky customer heed sorry saying seam possible algorithms dependency injection penance projection strongly argue sensible expecting understood incorrectly turn closer correctly understanding battery wrap accuse spending scene effectively free performance low criticism warranted five cents talks quacks duck phrases tend throw everybody confused typing deep depths theoretically speaking suitability based passed suitable commonly dynamic language type matter responds quoc quack common pretending responding parallel Turing test artificial intelligence sidestepping philosophically attempting answer restated experiment ignored treat provoke behaves distinguish far-fetched quite expected practically dynamically typed languages Ruby JavaScript specifying aren't constructing stating explicitly compiler interpreter receive accepts receiving concrete behave lightly pragmatic nothing polymorphism dispatch inheritance explicit statically sharp Java ignoring keyword classically whose known compile subtype either ancestor construct classical children subclasses parent lion cat dog lions dogs cats matters anywhere per se donkey step practical consequences senses smell assuming buy runtime prove quirk given naively resort strong followers capable knowing capability responsive web already contact focusing devices cell phones tablets computers tons browsers versions accumulating environment bring madness conditionals types capabilities browser knowledge support similarly switching aiming intending nail purpose utterly programming
"so previous weary static naturally am amongst opinion controversial attention usefulness functions functional style resemble fallacy important citizens higher-order i expert sides coin citizen computer science variable reference around hand side output strange map conversely partial curry topic emphasize wary implementations abstractions painting picture paint opportunity substitutability riding flexible becomes otherwise easily supported less implements passing against reasons believe helps straighten subscribe" makes easier execute parts machines processes threads works parallelizing paralysing paralyzing guess pure rules arguments must evaluate result 1 2 values effects effect disk database hard usable nother follows impure entirely depend uses reads fine writes file results side-effects thread thus mutating finish Map Reduce MapReduce tasks inputs length process outputs reducer multiple constructs shorter single paralyze become popular data millions compare sequence amounts gained programs risk mutate hypothetically cause rawness stuff responsibility standing s solid states module functionality rewritten useful Robert Morton's Geils Uncle Bob he rewrites massively happens currently borrow his slice pie unit desk impose roles accounting bookkeeping online financial reports designer redesign form entry field label finance add fields calculation include such-and-such overlaps adding guy asks happy reasoning limited rolls building product small start-up interact manner envision incoming requests hmm startups pivoting pivot second isolated considering adhering extraordinarily events contents simulations ordering simulation independently simulating ecology natural habitat eating sleeping drinking hunting simulate constitute company everything domain modeling plausible Martin's explanations glad hear comment said thanks more" testing versus integration ambiguous definitions tests high Vegas contrary integrating full isolation definition define simplified component encompass integrations framework library dotnet final utilities string helpers reg X's substring interpolation formatting extreme absurdum isolate integrate little early unambiguous main deterministic non-deterministic wrote pretty fully posed subjectively worth shortly channel
dependency inversion constructor parameter absolutely inject injecting references constructors drivel powerful casually straight all-encompassing invert dependencies relationship unnatural act inverting most formal never concretions oversimplification Injection rewriting writing members ones increases reuse encourages responsibilities behaviors aspects aspect testability allowing mock control pendency designing complete unwanted numbers imagine 50% fail totally penisy trivially figure inheriting cow speak prints strings Moo meow cab learn bigger forth hierarchies dandy instantiates level coupled modules pair nor instantiate knows subtypes composition compose contain redundant achieved provided instantiating wishes dangerous couple defer upwards backwards players keywords rest trade-offs discover units constantly you
"today entertain object-oriented equals pragmatism economical backlog features ship fast figuring assumption lean embrace agile release build soon front customers feedback iterate exactly incorrect pondering ages Lena crude oversimplifying influence care moment died charge continue consensus later choose faster business standpoint client roll worry focus here's agree software upfront implementing sorting clients smartest economic forget minute launching stage hundred percent accurate trajectory oh slowly rigid great dirty restart scratch consciously rewrite open-closed maximize chance clearly decouple decoupling architecture god source clean la polla arts art's sake architectures every wait stupid anticipate smart deliver logical corner throwing rebuilding actively seams smaller off-topic putting continuum mind comes messes performances brilliantly optimize hold mine built nobody likes direction competitors crazy idiotic heads ability constant reshape products fit demands evolution survival fittest perfectly demand feel leave chat time
"all ever mount camera car multitasking saw area whoa cool sweet hardly practice too shouldn't project toy bases share anybody maintain key maintained correlated Global's global State quote man's spot-on relative fool looks someday note made liberal vary series Google singleton excuse statics naive variables player underscore health max importantly yearly oil under hood done washed multitude harder components differently ran inflicted anyways namespace 402 suggestions track convenient rails who've worked Rails capital users manager accessible via accessor utility math manipulation Reg XS parse computing pseudo-random generate interject date two-piece whatsoever conditional breed Sandy mats cyclomatic complexity branches sometime switches replacing damn serious watch line earth ah kinds inherit specialize opie backtrack accessing equally entity record open croak room closed extension modification overriding rant washer shopping gotta vitamins weather shitty turning shittier brief dwelled land decoupled properly connection integrates talked puts choice he's giving user-defined lives repository wiring plain mark plumbing thinks sees statements Dooly disagree thoughts Cheerios wish luck success raining wash dude road tripod Joby sizes tripods lengths medium size useless awesome note
so forgot microphone headset ear hopefully helped punch jacket anyway sign usage frameworks libraries fight bike reach fundamentally adhere frame poorly surprising fundamentals economics loss tunic applies incurring pay redevelop spontaneous reaction proxies middleware tightly chosen external boundaries breakage boundary defined dense spread shotgun surgery meaning sidetracked hi John copy strategy recently tree structures depth dynastar big somebody managing structure manage motivate rolling else's heart convey Sandi Metz she hardwired repeat repeating pick Overson simplistic anomalies duplicate user's intend anomaly lazy suggest close safe notion reinventing wheel sometimes reinvent intuitively perfect logically routing intrinsic mentally gaining luxury reimplemented valuation icier similar grab runs discussed layer existing proponent successfully finishing custom promise favor communicated shipping shipped disgustin emitted slicing dividing allows convention connected interrelated modest suggestion gang four paddles iterator visitor factory structuring vague conforming hypothetical cut takeaway reconsider strategic feasible incur technical debt closely detective Chris delighted you

